@model APIViaCep.Controllers.Enderecos

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Enderecos</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control"/>
                <span asp-validation-for="Nome" class="text-danger"></span>

                <label asp-for="Cep" class="control-label"></label>
                <input asp-for="Cep" class="form-control" id="cep" maxlength="9" />

                <label asp-for="Logradouro" class="control-label"></label>
                <input asp-for="Logradouro" class="form-control" id="rua"/>

                <label asp-for="Complemento" class="control-label"></label>
                <input asp-for="Complemento" class="form-control" id="complemento"/>

                <label asp-for="Bairro" class="control-label"></label>
                <input asp-for="Bairro" class="form-control" id="bairro"/>

                <label asp-for="Cidade" class="control-label"></label>
                <input asp-for="Cidade" class="form-control" id="cidade"/>

                <label asp-for="Uf" class="control-label"></label>
                <input asp-for="Uf" class="form-control" id="estado"/>

                <label asp-for="Numero" class="control-label"></label>
                <input asp-for="Numero" class="form-control" id="numero"/>


            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>

    document.getElementById('cep').addEventListener('input', async function () {
        var cep = this.value; // Obtém o valor atual do campo de CEP
        this.value = formatarCep(cep); // Aplica a máscara formatada

        if (cep.length === 9) {
            try {
                const endereco = await consomeCep(cep);
                document.getElementById('rua').value = endereco.logradouro;
                document.getElementById('bairro').value = endereco.bairro;
                document.getElementById('cidade').value = endereco.localidade;
                document.getElementById('estado').value = endereco.uf;
            } catch (error) {
                console.error('Ocorreu um erro ao obter o endereço:', error);
            }
        }
    });

    function formatarCep(cep) {
        cep = cep.replace(/\D/g, ''); // Remove todos os caracteres não numéricos
        cep = cep.replace(/^(\d{5})(\d)/, '$1-$2'); // Adiciona o hífen após os primeiros 5 dígitos
        return cep;
    }

    async function consomeCep() {
        try {
            var cep = document.getElementById('cep').value;
            const url = `https://viacep.com.br/ws/${cep}/json/`
            const response = await fetch(url);
            if (!response.ok) {
                throw new Error('Erro ao obter dados do servidor.');
            }
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Ocorreu um erro:', error);
            throw error;
        }
    };

</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
